generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  dailyCredit Int      @default(10)
  address     String   @unique
  signature   String   @unique
  createdAt   DateTime @default(now())
  chats       Chat[] // Relation to user's chats
}

model Chat {
  id            String    @id @default(uuid())
  title         String    @default("New Chat")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id])
  userId        Int
  userSignature String // Store user signature for direct querying
  messages      Message[] // Relation to messages in this chat

  @@index([userSignature]) // Add index for faster queries by signature
}

model Message {
  id        String   @id @default(uuid())
  content   String   @db.Text
  role      String // "user" or "assistant"
  createdAt DateTime @default(now())
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId    String
  metadata  Json? // Optional field for storing additional data
}

model Weekly {
  id        Int      @id @default(autoincrement())
  timeStamp DateTime @default(now())
  message   String   @db.Text
  prompt    String   @db.Text

  @@index([timeStamp])
}

model Dayle {
  id        Int      @id @default(autoincrement())
  timeStamp DateTime @default(now())
  message   String   @db.Text
  prompt    String   @db.Text

  @@index([timeStamp])
}
